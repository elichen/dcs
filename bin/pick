#!/usr/bin/env python3
"""
fetch-pick - Execute complete pick sequence at specified position

Usage:
    fetch-pick <session-id> <x> <y> <z>
    
Output:
    JSON with success status and detailed results
"""

import sys
import os
import json
import subprocess
import numpy as np
from typing import Tuple

# Add parent directory to Python path
sys.path.insert(0, os.path.join(os.path.dirname(os.path.abspath(__file__)), '..'))

from lib.fetch_api import FetchAPI


def main():
    if len(sys.argv) != 5:
        print("Usage: fetch-pick <session-id> <x> <y> <z>", file=sys.stderr)
        return 1
    
    session_id = sys.argv[1]
    x, y, z = sys.argv[2], sys.argv[3], sys.argv[4]
    
    # Validate coordinates
    try:
        float(x), float(y), float(z)
    except ValueError:
        result = {"success": False, "message": "Invalid coordinates"}
        print(json.dumps(result))
        return 1
    
    # Execute pick sequence using Direct API
    try:
        api = FetchAPI.connect(session_id)
        overall_success, message, sequence_results = api.pick([float(x), float(y), float(z)])
    except Exception as e:
        overall_success, message, sequence_results = False, f"Direct API failed: {str(e)}", []
    
    final_result = {
        "success": overall_success,
        "message": message,
        "target_position": [float(x), float(y), float(z)],
        "sequence_results": sequence_results
    }
    
    print(json.dumps(final_result, indent=2))
    return 0 if overall_success else 1

if __name__ == '__main__':
    sys.exit(main())